#!/bin/bash
#
# Designed to be run once per minute.  Make sure the "DROPBOX" is set up
# and running rsyncd in an appropriate way.  This works on MacOS and
# probably other platforms with some tweaks.
#
# When running this on a mac, first grant Full Disk Access to:
# /usr/sbin/cron, /bin/bash, /usr/bin/rsync, Terminal.app, and this script.
#

set -f

RHOST=DROPBOX
DOM=EXAMPLE.com
PFX=/tmp/backup
LOG=$PFX.out
LOCK=$PFX.lock
LAST=$PFX.last
BEFORE=$PFX.cmp

# make sure we're on the right network
/sbin/ping -n -c 1 -o -q $RHOST.$DOM > /dev/null 2>&1 || exit 0

# make sure we didn't just do a backup
SIXAGO=`date -j -v-6H '+%Y%m%d%H%M.%S'`
touch -t $SIXAGO $BEFORE
test -f $LAST && test $LAST -nt $BEFORE && exit 0

# only one backup can run at a time
shlock -p $$ -f $LOCK || exit 0

HOST=`hostname -s | tr 'A-Z' 'a-z'`
RSYNC=/usr/bin/rsync
FLAGS="-v -r -l --copy-unsafe-links -p -o -g -t -S --delete-during --delete-excluded --max-delete=100 --bwlimit=3200"
date > $LOG

backdir() { # <srcpath> <dstpath> <flags>...
  xSRC=$1/
  xDST=${RHOST}::$2/
  shift 2
  xCMD="$RSYNC $FLAGS $* $xSRC $xDST"
  echo $xCMD >> $LOG
  $xCMD >> $LOG 2>&1
  date >> $LOG
}

backdir $HOME backedup/$USER/${HOST}_home '--exclude=.Trash/ --exclude=Caches/'

touch $LAST

rm -f $LOCK

##### EOF #####
